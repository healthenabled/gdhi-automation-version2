name: CI Pipeline for Automation

on:
  push:
    branches: ["master"]
  pull_request:
    branches: ["master"]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: check out code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: "17"
          distribution: "temurin"

      - name: Install curl
        run: sudo apt install curl

      - name: Install Gauge
        run: curl -SsL https://downloads.gauge.org/stable | sh

      - name: grant permissions
        run: chmod +x gradlew

      - name: Install psql
        run: sudo apt-get install -y postgresql-client

      #       - name: Start the server
      #         run: sudo systemctl start postgresql

      #       - name: Status of the server
      #         run: sudo systemctl status postgresql

      #  - name: check
      #    run: pg_lsclusters

      #  - name: change cluster permissions
      #    run: sudo chmod 700 -R /var/lib/postgresql/14/main

      #       - name: check3
      #         run: sudo /usr/lib/postgresql/14/bin/pg_ctl restart -D /var/lib/postgresql/14/main

      # - name: check
      #   run: pg_lsclusters

      #       - name: check the cluster
      #         run: systemctl status postgresql@14-main.service

      #       - name: restart service
      #         run: sudo systemctl restart postgresql

      # - name: logs
      #   run: sudo cat /var/log/postgresql/postgresql-14-main.log

      #      - name: check the socket
      #        run: sudo netstat -lnp | grep postgres

      - name: check pgconf file
        run: sudo cat /etc/postgresql/14/main/postgresql.conf

      - name: prerequisite sql script
        run: psql postgresql://${{ secrets.DB_QA_USER }}:${{ secrets.DB_QA_PASSWORD }}@${{ secrets.DB_QA_HOST }}/${{ secrets.DB_QA_NAME }} -f data_reset.sql

      #      - name: prerequisite sql script
      #        run : |
      #             PGPASSWORD=${{ secrets.DB_QA_PASSWORD }} psql -h ${{ secrets.DB_QA_HOST }} -U ${{ secrets.DB_QA_USER }} -d 'gdhi_qa' < data_reset.sql

      - name: Run Gauge for UI
        run: CHROME_HEADLESS=false ./gradlew clean gauge -Ptags='ui'
        continue-on-error: true

      - name: Run Gauge for APIs
        run: ./gradlew clean gauge -Ptags='api'

      - name: Build gdhi-automation-version2
        run: ./gradlew clean build
